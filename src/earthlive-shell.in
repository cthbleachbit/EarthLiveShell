#!/bin/bash
#==========================================================
# EarthLiveShell
# Main Script
# Copyright (C) James Chai (cth451) <cth451@gmail.com>
# Inspired by bitdust's [ https://github.com/bitdust ]
# Licensed under LGPL 3
#
# This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
#==========================================================

export TEXTDOMAIN=earthlive-shell
export TEXTDOMAINDIR='@localedir@'

# settings database
opt_store="${HOME}/.earthliveshell"
[[ -d ${opt_store} ]] || mkdir "${opt_store}"
[[ -f ${opt_store}/EarthLive.rc ]] || touch "${opt_store}/EarthLive.rc"

# I/O library
. '@libdir@/io.lib.sh'

# Check Desktop Environment
opt_guienv=$(echo "$XDG_CURRENT_DESKTOP" | awk '{print tolower($0)}')
if [[ ! $opt_guienv =~ gnome|mate|unity ]]; then
	[[ "$1" == "--start" ]] || show_dialog --error --text="$(gettext 'Gnome based DE only!')"
	log 2 "Incompatible DE: $opt_duienv"
	# show error information on user start only.
	exit 1
else
	log 1 "Frontend invoked in $opt_guienv"
fi
. '@libdir@/config.lib.sh'

# default interval: 30 minutes
opt_interval=30

# default image density: 1d
opt_density=1

# check running state
# planning to port to OS X and prevent another process occupying pid
state_has_modified=0
[[ -f ${opt_store}/pid ]] && pid=$(cat ${opt_store}/pid) || pid=0
ps -h --pid $pid | grep earthlive 
(( $? )) && state_running=0 || state_running=1
. "${opt_store}/EarthLive.rc"

# code reuse section
modify_opt () {
	sed -i "${opt_store}/EarthLive.rc" -e "/${1}=.*$/D"
	echo "${1}=${!1}" >> "${opt_store}/EarthLive.rc"
	state_has_modified=1
}

# Operational functions
start () {
	save_original
	setsid earthlive-daemon "$opt_interval" "$opt_density" &
	apply_live
}

stop () {
	(( $state_running )) && kill -TERM $pid
	restore_original
}

toggle_autostart () {
	if [[ -f ${HOME}/.config/autostart/EarthLiveStart.desktop ]]; then
		rm -rf ${HOME}/.config/autostart/EarthLiveStart.desktop
		stop
		show_dialog --info --text="$(gettext 'Will not autostart now.')"
	else
		[[ -d ${HOME}/.config/autostart ]] || mkdir -p ${HOME}/.config/autostart
		ln -sf /usr/local/share/applications/EarthLiveStart.desktop ${HOME}/.config/autostart/EarthLiveStart.desktop
		show_dialog --info --text="$(gettext 'Autostart configured!')"
	fi
}

options () {
	while [[ "${ans1}" = "" ]]; do
		ans=$(show_dialog --list --text="$(gettext 'Choose an option.')" \
			--print-column=1 --height=200 --width=400 \
			--column "$(gettext 'Parameter')" --column "$(gettext 'Description')" \
			"opt_interval" "$(gettext 'Interval between two image checks in minutes')" \
			"opt_density" "$(gettext 'Image Density')")
		[[ "$ans" = "" ]] && break
		if [[ "$ans" = "opt_interval" ]]; then
			ans1=$(show_dialog --entry \
				--text="$(_gettext '%s is now %s minutes. Leave blank if you are not going to change it.' ${ans}  ${!ans})")
			if [[ "$ans1" =~ ^[1-9][0-9]*$ ]]; then
				opt_interval="$ans1"
				modify_opt "opt_interval" "$ans1"
			else
				[[ "$ans1" = "" ]] || show_dialog \
					--error --text="$(gettext 'What? This is a integer only field!')"
			fi
			# ask for furthur options
			ans1=""
		elif [[ "$ans" = "opt_density" ]]; then
			ans1=$(show_dialog --entry \
				--text="$(_gettext '%s is now %s. Leave blank if you are not going to change it.' ${ans}  ${!ans})")
			if [[ "$ans1" =~ ^(1|2|4)$ ]]; then
				opt_density="$ans1"
				modify_opt "opt_density" "$ans1"
			else
				[[ "$ans1" = "" ]] || show_dialog \
					--error --text="$(gettext 'Density must be one of 1, 2 and 4. To set it higher to 8, 10, 16 and 20, edit ~/.earthliveshell/EarthLive.rc')"
			fi
			# ask for furthur options
			ans1=""
		fi
	done

	# if running previously, restart
	if (( $state_has_modified & $state_running )); then
		stop
		start
	fi
}

# Main

if [[ "$1" == "--start" ]]; then
	(( state_running )) || start
else
	if (( state_running )); then
		MAJOR=$(show_dialog \
			--list --text="$(gettext 'EarthLive Service is <b>running</b>.')" --height=230 --width=300 \
			--print-column=2 --hide-column=2 \
			--column "Ops"		--column "code" \
			"$(gettext 'Stop')"				"Stop" \
			"$(gettext 'Options')"			"Options" \
			"$(gettext 'Toggle Autostart')"	"Toggle Autostart" \
			"$(gettext 'Flush Logs')"		"Flush Logs")
	else
		MAJOR=$(show_dialog \
			--list --text="$(gettext 'EarthLive Service is <b>not running</b>.')" --height=230 --width=300 \
			--print-column=2 --hide-column=2 \
			--column "Ops"		--column "code" \
			"$(gettext 'Start')"			"Start" \
			"$(gettext 'Options')"			"Options" \
			"$(gettext 'Toggle Autostart')"	"Toggle Autostart" \
			"$(gettext 'Flush Logs')"		"Flush Logs")
	fi

	case "$MAJOR" in
		"Start")		start;;
		"Stop")			stop;;
		"Options")		options;;
		"Toggle Autostart")	toggle_autostart;;
		"Flush Logs")		flush_logs;;
	esac
fi
